<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mesos | sgykfjsm.github.com]]></title>
  <link href="http://sgykfjsm.github.io/blog/categories/mesos/atom.xml" rel="self"/>
  <link href="http://sgykfjsm.github.io/"/>
  <updated>2017-09-11T22:47:56+09:00</updated>
  <id>http://sgykfjsm.github.io/</id>
  <author>
    <name><![CDATA[sgykfjsm]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[mesos上にHadoopをインストールする]]></title>
    <link href="http://sgykfjsm.github.io/blog/2014/01/10/install-hadoop-on-mesos/"/>
    <updated>2014-01-10T00:51:00+09:00</updated>
    <id>http://sgykfjsm.github.io/blog/2014/01/10/install-hadoop-on-mesos</id>
    <content type="html"><![CDATA[<p>前回、mesosをDEBパッケージを使ってインストールする方法を示した。これを前提としてmesosが動いているクラスタにHadoopをインストールし、wordcountをchrnosを通じて動かすところまでの手順を示す。</p>

<p>ちなみに見てくれている人の時間をムダにしないために言うと、一部を除けば普通の手順(Clouderaのチュートリアルとか)でやれば大抵は普通に動くはず。なのでHadoopに詳しい人は、<a href="https://www.google.co.jp/search?q=hadoop+mesos&amp;oq=hadoop+mesos&amp;aqs=chrome..69i57j69i60l3j0l2.2556j0j7&amp;sourceid=chrome&amp;espv=210&amp;es_sm=91&amp;ie=UTF-8">「Hadoop mesos」でググったほう</a>が良いと思う。ここではSparkの利用を見越しての設定を行なうのと、とHadoopもmesosもあまり詳しくない人向けに記述する。Chronosについては、まぁついでにというレベルだし、実際非常に導入が楽なので、<a href="http://airbnb.github.io/chronos/#Quick%20Start">公式のQuick Start</a>でも見たほうが良い。</p>

<!-- more -->


<a name="Hadoop........."></a>
<h2>Hadoopの準備</h2>

<p>Hadoopの作業場所を用意してあげる。実際は諸々インストールした後にmapred(hdfs？)ユーザのホームディレクトリに用意するのが正しい作法なのだろうと後から気づいた。</p>

<pre><code>vagrant@master1:/tmp$ mkdir -p /home/vagrant/hadoop_home
</code></pre>

<p>1-click installerのダウンロードとインストール、リポジトリキーのインストールを行なう。</p>

<pre><code>vagrant@master1:/tmp$ wget http://archive.cloudera.com/cdh4/one-click-install/precise/amd64/cdh4-repository_1.0_all.deb
--2014-01-01 08:51:10--  http://archive.cloudera.com/cdh4/one-click-install/precise/amd64/cdh4-repository_1.0_all.deb
Resolving archive.cloudera.com (archive.cloudera.com)... 184.73.217.71
Connecting to archive.cloudera.com (archive.cloudera.com)|184.73.217.71|:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 3304 (3.2K) [application/x-debian-package]
Saving to: `cdh4-repository_1.0_all.deb'

100%[============================================================&gt;] 3,304       --.-K/s   in 0.001s

2014-01-01 08:51:12 (4.34 MB/s) - `cdh4-repository_1.0_all.deb' saved [3304/3304]

vagrant@master1:/tmp$ sudo dpkg -i cdh4-repository_1.0_all.deb
(Reading database ... 72497 files and directories currently installed.)
Preparing to replace cdh4-repository 1.0 (using cdh4-repository_1.0_all.deb) ...
Unpacking replacement cdh4-repository ...
Setting up cdh4-repository (1.0) ...
gpg: keyring `/etc/apt/trusted.gpg.d/cloudera-cdh4.gpg' created
gpg: key 02A818DD: public key "Cloudera Apt Repository" imported
gpg: Total number processed: 1
gpg:               imported: 1
vagrant@master1:/tmp$ curl -s http://archive.cloudera.com/cdh4/ubuntu/precise/amd64/cdh/archive.key | sudo apt-key add -
OK
</code></pre>

<p>CDH4 with MRv1をインストールする。</p>

<pre><code># マスターノードのみ(jobtrackerはいらないかも？というか、多分いらない)
vagrant@master1:/tmp$ sudo apt-get -y install hadoop-0.20-mapreduce-jobtracker hadoop-hdfs-namenode hadoop-client
# マスターノードとスレーブノードの両方
vagrant@master1:/tmp$ sudo apt-get -y install hadoop-0.20-mapreduce-tasktracker hadoop-hdfs-datanode hadoop-client
</code></pre>

<p>設定ファイルを修正する。細かい点については多々不適切というかチューニングの余地があると思うけど、とりあえず動かすならこの設定で大丈夫だと思う。</p>

<p><figure class='code'><figcaption><span>core-site.xml / </span><a target='_blank' href='https://gist.github.com/8346265'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'><span class="cp">&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;name&gt;</span>fs.defaultFS<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>    <span class="nt">&lt;value&gt;</span>hdfs://master1:8020/<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;name&gt;</span>hadoop.tmp.dir<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>    <span class="nt">&lt;value&gt;</span>/tmp/hadoop<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;name&gt;</span>hadoop.security.group.mapping<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>    <span class="nt">&lt;value&gt;</span>org.apache.hadoop.security.ShellBasedUnixGroupsMapping<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<figure class='code'><figcaption><span>hdfs-site.xml / </span><a target='_blank' href='https://gist.github.com/8346335'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'><span class="cp">&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property&gt;</span>
</span><span class='line'>     <span class="nt">&lt;name&gt;</span>dfs.name.dir<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>     <span class="nt">&lt;value&gt;</span>/var/lib/hadoop-hdfs/cache/hdfs/dfs/name<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;name&gt;</span>dfs.permissions.superusergroup<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>    <span class="nt">&lt;value&gt;</span>hadoop<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;name&gt;</span>dfs.name.dir<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>    <span class="nt">&lt;value&gt;</span>/home/vagrant/hadoop_home/data/1/dfs/nn<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;name&gt;</span>dfs.webhdfs.enabled<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>    <span class="nt">&lt;value&gt;</span>true<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;name&gt;</span>dfs.datanode.data.dir<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>    <span class="nt">&lt;value&gt;</span>/home/vagrant/hadoop_home/data/1/dfs/dn,/home/vagrant/hadoop_home/data/2/dfs/dn,/home/vagrant/hadoop_home/data/3/dfs/dn<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<figure class='code'><figcaption><span>mapred-site.xml / </span><a target='_blank' href='https://gist.github.com/8346355'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
<span class='line-number'>255</span>
<span class='line-number'>256</span>
<span class='line-number'>257</span>
<span class='line-number'>258</span>
<span class='line-number'>259</span>
<span class='line-number'>260</span>
<span class='line-number'>261</span>
<span class='line-number'>262</span>
<span class='line-number'>263</span>
<span class='line-number'>264</span>
<span class='line-number'>265</span>
<span class='line-number'>266</span>
<span class='line-number'>267</span>
<span class='line-number'>268</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'><span class="cp">&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property&gt;</span>
</span><span class='line'>   <span class="nt">&lt;name&gt;</span>mapred.job.tracker<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>   <span class="nt">&lt;value&gt;</span>master1:8021<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property&gt;</span>
</span><span class='line'>   <span class="nt">&lt;name&gt;</span>mapred.local.dir<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>   <span class="nt">&lt;value&gt;</span>/home/vagrant/hadoop_home/data/1/mapred/local,/home/vagrant/hadoop_home/data/2/mapred/local,/home/vagrant/hadoop_home/data/3/mapred/local<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property&gt;</span>
</span><span class='line'>   <span class="nt">&lt;name&gt;</span>mapreduce.jobtracker.restart.recover<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>   <span class="nt">&lt;value&gt;</span>true<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>  <span class="c">&lt;!-- The web UI will bind --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property&gt;</span>
</span><span class='line'>      <span class="nt">&lt;name&gt;</span>mapred.job.tracker.http.address<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>      <span class="nt">&lt;value&gt;&lt;/value&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c">&lt;!-- This identifies the mesos-master. E.g. zk://1.1.1.1:2181,2.2.2.2:2181,3.3.3.3:2181/mesos --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property&gt;</span>
</span><span class='line'>      <span class="nt">&lt;name&gt;</span>mapred.mesos.master<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>      <span class="nt">&lt;value&gt;</span>zk://master1:2181,slave1:2181,slave2:2181/mesos<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="c">&lt;!--</span>
</span><span class='line'><span class="c">      This property identifies the location of the modified hadoop distribution containing this XML file.</span>
</span><span class='line'><span class="c">      The mesos slave will download this distribution if a hadoop job is launched, extract the file and use the hadoop binary</span>
</span><span class='line'><span class="c">      to start the task tracker.</span>
</span><span class='line'><span class="c">      Sample hdfs://&lt;hdfs-namenode-host &amp; optional port&gt;/hadoop-2.0.0-mr1-cdh4.2.1.tgz -&gt; hdfs://namenode.mesosphere.io:9000/hadoop-2.0.0-mr1-cdh4.2.1.tgz</span>
</span><span class='line'><span class="c">    --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapred.mesos.executor.uri<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>hdfs://master1/hadoop-2.0.0-mr1-cdh4.2.1.tgz<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="c">&lt;!--</span>
</span><span class='line'><span class="c">      The remaining properties do not require adjustment, but for running production jobs it&#39;s recommended to modify them</span>
</span><span class='line'><span class="c">      to optimize for different cluster &amp; machine sizes.</span>
</span><span class='line'><span class="c">    --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapred.mesos.slot.cpus<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>0.20<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapred.mesos.slot.disk<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="c">&lt;!-- The value is in MB. --&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>512<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapred.mesos.slot.mem<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="c">&lt;!-- Note that this is the total memory required for</span>
</span><span class='line'><span class="c">         JVM overhead (256 MB) and the heap (-Xmx) of the task.</span>
</span><span class='line'><span class="c">         The value is in MB. --&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>368<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapred.mesos.tasktracker.mem<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>368<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapred.mesos.total.map.slots.minimum<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>1<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapred.mesos.total.reduce.slots.minimum<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>1<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="c">&lt;!-- The values below should work out of the box but you might want to optimize some of them for running production jobs --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapred.jobtracker.taskScheduler<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>org.apache.hadoop.mapred.MesosScheduler<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapred.mesos.taskScheduler<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>org.apache.hadoop.mapred.JobQueueTaskScheduler<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="c">&lt;!-- The MesosScheduler will record some stats in this file --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapred.mesos.state.file<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>/tmp/jobtracker-state<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="c">&lt;!-- This is only relevant if a fixed slot policy is used --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapred.tasktracker.map.tasks.maximum<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>10<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="c">&lt;!-- This is only relevant if a fixed slot policy is used --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapred.tasktracker.reduce.tasks.maximum<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>10<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapreduce.jobtracker.expire.trackers.interval<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>60000<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapred.tasktracker.expiry.interval<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>60000<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapreduce.jobtracker.restart.recover<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>true<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapred.child.java.opts<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>-XX:+UseParallelGC -Xmx256m<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapreduce.tasktracker.dns.interface<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>eth0<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="c">&lt;!-- The reduce tasks start when 60% of the maps are done --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapreduce.job.reduce.slowstart.completedmaps<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>0.60<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapred.reduce.slowstart.completed.maps<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>0.60<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="c">&lt;!-- This is important when the tasktracker serves tons of maps, TODO(*) templetize --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapreduce.tasktracker.http.threads<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>8<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>tasktracker.http.threads<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>8<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapreduce.reduce.shuffle.parallelcopies<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>20<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapred.reduce.parallel.copies<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>20<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapreduce.jobtracker.handler.count<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>70<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapred.job.tracker.handler.count<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>70<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapreduce.reduce.shuffle.retry-delay.max.ms<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>10000<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapreduce.reduce.shuffle.connect.timeout<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>10000<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapreduce.reduce.shuffle.read.timeout<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>10000<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapreduce.reduce.shuffle.maxfetchfailures<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>4<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapreduce.reduce.shuffle.notify.readerror<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>true<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapreduce.map.output.compress<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>true<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapreduce.task.io.sort.mb<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>30<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>io.sort.mb<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>30<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapreduce.task.io.sort.factor<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>10<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>io.sort.factor<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>10<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapreduce.job.jvm.numtasks<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>-1<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapred.job.reuse.jvm.num.tasks<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>-1<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapreduce.job.ubertask.enable<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>true<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapreduce.job.speculative.speculativecap<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>0.01<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>webinterface.private.actions<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>true<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapreduce.jobtracker.webinterface.trusted<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>true<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapred.reduce.max.attempts<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>6<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapred.map.max.attempts<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>6<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapreduce.map.maxattempts<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>6<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapreduce.reduce.maxattempts<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>6<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapred.max.tracker.failures<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>6<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapreduce.job.maxtaskfailures.per.tracker<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>6<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapreduce.reduce.merge.memtomem.enabled<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>true<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapred.skip.map.max.skip.records<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>10<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapreduce.map.skip.maxrecords<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>10<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapreduce.reduce.skip.maxgroups<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>2<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapred.skip.reduce.max.skip.groups<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>2<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapreduce.fileoutputcommitter.marksuccessfuljobs<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>false<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;property&gt;</span>
</span><span class='line'>        <span class="nt">&lt;name&gt;</span>mapred.mesos.tasktracker.cpus<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="c">&lt;!-- This is the number of CPUs reserved for the container.--&gt;</span>
</span><span class='line'>        <span class="nt">&lt;value&gt;</span>0.15<span class="nt">&lt;/value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>この設定について、nameノード1台、taskノード2台で試す場合</p>

<pre><code>&lt;property&gt;
    &lt;name&gt;mapred.mesos.total.map.slots.minimum&lt;/name&gt;
    &lt;value&gt;1&lt;/value&gt;
&lt;/property&gt;
&lt;property&gt;
    &lt;name&gt;mapred.mesos.total.reduce.slots.minimum&lt;/name&gt;
    &lt;value&gt;1&lt;/value&gt;
&lt;/property&gt;
</code></pre>

<p>デフォルトだと、それぞれvalueはゼロとなっているが、その設定のままだと、例えばこの後に何らかのJobを動かしてMapperが2つ動いてしまい、Reducerが動かなくなってしまう(Mapper 100%, Reducer 0%でPendingしてしまう)。なので、それぞれ(Reducerだけでいいかもしれない)のminimumを1にしておく必要がある。</p>

<p>設定ファイルの修正が済んだら、必要なディレクトリを用意する。</p>

<pre><code>vagrant@master1:/tmp$ sudo mkdir -p /home/vagrant/hadoop_home/data/{1,2,3}/mapred/local
vagrant@master1:/tmp$ sudo chown -R mapred:hadoop /home/vagrant/hadoop_home
</code></pre>

<p>ここまでが通常のHadoopの準備。設定ファイルは全ノードにばらまいてdatanodeを再起動しておく。もちろんマスターノードはnamenodeも再起動しておく。</p>

<pre><code>vagrat:master1:~/hadoop_home$ for x in `cd /etc/init.d/; ls hadoop-*`;do sudo service ${x} restart ;done
</code></pre>

<p>次がHadoop on mesosの準備。</p>

<a name="Hadoop.on.mesos...................................."></a>
<h2>Hadoop on mesosとは？（自分なりの理解）</h2>

<p>ここで改めてHadoop on mesosと先ほど準備したHadoopとの違い(?)について、自分なりに理解のおさらいをする。<br>mesosって要は散在しているマシンリソースを束ねてクラスタ化する、みたいなイメージなんだけど、そこにHadoopが乗っかることでスケーラビリティだったり、バッチ処理における耐障害性の向上をもたらすことができるようになる。<br>もう少し整理して言うと、Hadoopのマスターノードがスレーブノードにjobtrackerを通じて仕事を渡して、スレーブノードはtasktrackerを通じて成果を返す。Hadoopのバッチ処理の肝はここにあると思っていて、ばら撒いた仕事がちゃんと期待した成果として戻ってくることを保証してくれることにある。なので、渡した仕事が返ってこなかったり、仕事中にスレーブノードが死んだりしたときに、その仕事を別のスレーブノードに適切に渡してあげないといけないし、マスターノードが死んでた時には新しいマスターノードがちゃんとこれまでの成果を引き継いでおいて、スレーブノードは新しいマスターノードに成果を渡せるようになっておかないといけない。つまり、jobtrackerとtasktrackerの間のコミュケーションを適切に維持していく必要がある。mesosはこの点を強化させていくことができる、のだと思う…。あまり自信がない…。まぁ大筋では外していないと思う。</p>

<a name="Hadoop.on.mesos....................."></a>
<h2>Hadoop on mesosの設定をする。</h2>

<p>なので、Hadoopのjobtrackerやtasktrackerをうまくmesosと融合というか連携というか、アレする必要があるので以下のようにする。以降の手順は<a href="http://mesosphere.io/learn/run-hadoop-on-mesos/#step-0">mesosphereのRun Apache Hadoop on Apache Mesos</a>を踏襲しているので、そちらも参考にされたし。</p>

<pre><code>vagrat:master1:~/hadoop_home$ wget http://downloads.mesosphere.io/dcc/apps/hadoop/distros/mr1-2.0.0-mr1-cdh4.2.1.tar.gz
vagrat:master1:~/hadoop_home$ tar xzf mr1-2.0.0-mr1-cdh4.2.1.tar.gz
vagrat:master1:~/hadoop_home$ cd hadoop-2.0.0-mr1-cdh4.2.1
vagrat:master1:~/hadoop_home/hadoop-2.0.0-mr1-cdh4.2.1 $ wget -O lib/ http://downloads.mesosphere.io/dcc/apps/hadoop/hadoop-mesos/hadoop-mesos-0.0.3.jar
vagrat:master1:~/hadoop_home/hadoop-2.0.0-mr1-cdh4.2.1 $ wget -O lib/ wget http://downloads.mesosphere.io/maven/org/apache/mesos/mesos/0.14.0-rc4/mesos-0.14.0-rc4.jar
</code></pre>

<p>ここで取得した2つのjarをHadoopのlibディレクトリに配置して、それをtarで梱包したら出来上がり。あとはこの梱包したmesos用Hadoopの実行モジュールをスレーブノードが使えるようにHDFS上にアップする。試してはいないけど、これって多分何らかの方法で実行モジュールが取得できればいいと思うので、S3とかにアップロードしてもいいんじゃないかと思う。もちろんその場合は、<code>mapred.mesos.executor.uri</code>のvalueをS3のURLにしておく必要がある。はず。</p>

<pre><code>vagrat:master1:~/hadoop_home/hadoop-2.0.0-mr1-cdh4.2.1 $ cd ../
vagrat:master1:~/hadoop_home$ tar czf hadoop-2.0.0-mr1-cdh4.2.1.tar.gz hadoop-2.0.0-mr1-cdh4.2.1
vagrat:master1:~/hadoop_home$ sudo -u mapred /usr/bin/hadoop dfs -copyFromLocal ./hadoop-2.0.0-mr1-cdh4.2.1.tgz /
</code></pre>

<p>これでおおよその準備は整った。で、バッチ処理を走らせるにあたってjobtrackerを起動させるわけだけど、先ほど触れたようにmesosがjobtrackerやtasktrackerをよろしくやってくれる（と思っている）ので、これらはHDFS上にアップした実行モジュールのjobtrackerを用いる。マスターノードで起動させるので、梱包前のディレクトリに移動し、以下の様な感じで起動させれば良い。</p>

<p><figure class='code'><figcaption><span>launch_hadoop_jobtracker.sh / </span><a target='_blank' href='https://gist.github.com/8357410'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'>sudo -u mapred -g hadoop <span class="se">\</span>
</span><span class='line'>env <span class="nv">JAVA_HOME</span><span class="o">=</span>/usr/lib/jvm/java-1.7.0-openjdk-amd64 <span class="se">\</span>
</span><span class='line'><span class="nv">HADOOP_HOME</span><span class="o">=</span><span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/hadoop-2.0.0-mr1-cdh4.2.1 <span class="se">\</span>
</span><span class='line'><span class="nv">HADOOP_CONF_DIR</span><span class="o">=</span>/etc/hadoop/conf <span class="se">\</span>
</span><span class='line'><span class="nv">JAVA_LIBRARY_PATH</span><span class="o">=</span>/usr/local/lib/ <span class="se">\</span>
</span><span class='line'><span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/hadoop-2.0.0-mr1-cdh4.2.1/bin/hadoop jobtracker
</span></code></pre></td></tr></table></div></figure></p>

<p>上記のスクリプトで起動されるjobtrackerはserviceスクリプトみたいにデーモン化はされなくて、そのままコンソール上にログを垂れ流す。止めたい場合は<code>Ctrl + C</code>とすると、でjobtrackerがシャットダウンされる。デーモン化させたい場合は、<code>${HADOOP_HOME}/bin/hadoop_daemon.sh</code>とかに渡してあげればいいんじゃないかと。試してないけど。あと、上記スクリプトは<code>sudo bash launch_hadoop_jobtracker.sh</code>としてあげてください。</p>

<p>実際に起動してみると、以下の様なログが出て、ジョブ待ちの状態となる。</p>

<pre><code>14/01/10 16:38:00 INFO mapred.ResourcePolicy: JobTracker Status
      Pending Map Tasks: 0
   Pending Reduce Tasks: 0
      Running Map Tasks: 0
   Running Reduce Tasks: 0
         Idle Map Slots: 1
      Idle Reduce Slots: 1
     Inactive Map Slots: 0 (launched but no hearbeat yet)
  Inactive Reduce Slots: 0 (launched but no hearbeat yet)
       Needed Map Slots: 0
    Needed Reduce Slots: 0
     Unhealthy Trackers: 0
14/01/10 16:38:00 INFO mapred.ResourcePolicy: Satisfied map and reduce slots needed.
</code></pre>

<p>これだけみてもつまらないのだけど、この状態でmesosのWebUIにアクセスしてみるとActive Frameworksとして起動中のjobtrackerが登録されているのがわかる。</p>

<p><img src="/images/2014-01-11T01.44.51.png"></p>

<p>ここからIDのリンクをクリックすると、以下の画面が出てスレーブノードでtasktrackerが起動していることがわかる。</p>

<p><img src="/images/2014-01-11T01.56.37.png"></p>

<p>さらにTask_Tracker_1のリンクをクリックしたところ。</p>

<p><img src="/images/2014-01-11T1.59.59.png"></p>

<p>そしてSandboxのリンクをクリックしたところ。HDFS上にアップした実行モジュールがダウンロードされて展開されていることがわかる。ちなみにこのリンクはローカルで名前解決できるようにしておかないと見れないので注意。</p>

<p><img src="/images/2014-01-11T2.02.44.png"></p>

<p>ちなみにjobtrackerを終わらせるとTerminated Frameworksに移動する。</p>

<p><img src="/images/2014-01-11T2.51.43.png"></p>

<p>これらのことから、HadoopのjobtrackerとtasktrackerはFrameworkとしてmesosに管理されていることがわかる。つまり、mesosのリソースとしてスレーブノードが管理されることでその上で走るjobtrackerなりtasktrackerも同様に管理されることになる？という理解でいいのだろうか？mesosを利用することでDCをまたいだHadoopジョブが可能になったりしてスケーラビリティが向上するとかの効用もきっとあるのだと思う。</p>

<p>んーでもこのへんの理解はちゃんとmesosの論文を読むなりアーキテクチャの理解を深めないとダメだ。</p>

<p>で。結構長くなったのでChronosを用いたHadoopジョブの実行は次回に持ち越し。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mesosをDEBパッケージからインストールする]]></title>
    <link href="http://sgykfjsm.github.io/blog/2014/01/09/install-mesos-with-deb/"/>
    <updated>2014-01-09T06:48:00+09:00</updated>
    <id>http://sgykfjsm.github.io/blog/2014/01/09/install-mesos-with-deb</id>
    <content type="html"><![CDATA[<p>mesosをインストールする場合、ソースをコンパイルしてインストールすることが公式の<a href="http://mesos.apache.org/gettingstarted/">Getting Started with Apache Mesos</a>に記載されているが、この方法だとコンパイルに非常に時間がかかる（10分から20分ぐらい）ので、<a href="http://mesosphere.io/downloads/">mesosphereが提供しているパッケージ</a>を利用したほうが良い。<br>ここでは、パッケージからインストールする手順をまとめる。</p>

<!-- more -->


<a name="L....................."></a>
<h2>事前準備の前に</h2>

<p>mesosだけを動かすならたぶんメモリは512MBとかでも動くと思うけど、実際にはmesosの上でHadoopやSpark、Chronosを動かす必要がある、というかこれらのアプリケーションと協働しないと意味がないので、クラスターのノードには2GBぐらいのメモリとCPUは2発以上欲しいところ。とりあえず動かすならCPUは1発でも大丈夫。</p>

<p>また、mesosのWeb UIではSlaveがホスト名で表示され、その情報を見ることができるが、Slaveのホスト名が名前解決できるようになっていないといけない。ローカルのVMで試す場合やグローバルで名前解決できない場合は、それぞれを<code>/etc/hosts</code>に登録するなどして置く必要がある。</p>

<p>というか、お金がある人はこんなことに時間を使わずに<a href="https://elastic.mesosphere.io/">Elastic Apache Mesos</a>を使ったほうが良いと思う。マジで。</p>

<p>私のようにお金がない人は以下のように手元の環境で試さざるを得ないと思うので、このポストがそういう人たちの役に立てたら結構うれしい。</p>

<a name="L...................................."></a>
<h2>先に読んでおくと捗る記事</h2>

<ul>
<li><a href="http://steps.dodgson.org/b/2013/03/10/mesos-a-cloud-scheduler/">Mesos: A Cloud Scheduler (1)</a>

<ul>
<li>ソースについての解説があって、mesosを知る上でかなり勉強になる。ただ、記事自体は着目が早かった為か、もしかしたら若干古い可能性がある。</li>
</ul>
</li>
<li><a href="http://d.hatena.ne.jp/kimutansk/searchdiary?word=%2A%5BMesos%5D">夢とガラクタの集積場</a>

<ul>
<li>色々と試行錯誤をされており、大変参考になる。これがなかったら多分mesosは諦めていた。</li>
</ul>
</li>
<li><a href="http://blog.livedoor.jp/sonots/archives/35421955.html">正月休みだし Mesos 触ってみた</a>

<ul>
<li>はっきり言って、私の以降のポストを見るよりかはこっちのほうが読んでてわかりやすい。</li>
</ul>
</li>
</ul>


<a name="L.................."></a>
<h2>事前準備など</h2>

<p>今回はmacのvagrantでubuntu on Virtual Boxな環境で試した。なので、vagrantでの設定も事前準備としてついでにまとめておく。</p>

<a name="Vagrant........."></a>
<h3>Vagrantの設定</h3>

<p>まずは以下のプラグインをインストールする。</p>

<pre><code>$ vagrant pluin install vagrant-cachier
$ vagrant pluin install vagrant-vbguest
$ vagrant pluin install vagrant-vbox-snapshot
</code></pre>

<p>多分使わないけど、なんとなく各VMに対して共有フォルダを用意しておく。
    $ mkdir data{1,2,3}</p>

<p>Ubuntuをローカルにダウンロードしておく。</p>

<pre><code>$ wget -q -O ~/local/vagrant/box/precise-server-cloudimg-amd64-vagrant-disk1.box http://cloud-images.ubuntu.com/vagrant/precise/current/precise-server-cloudimg-amd64-vagrant-disk1.box
</code></pre>

<p>適当な名前でVagrantに登録する。</p>

<pre><code>$ vagrant box add precise ~/local/vagrant/box/precise-server-cloudimg-amd64-vagrant-disk1.box
</code></pre>

<p>Vagrantの設定ファイルを作る
    $ vagrant init precise</p>

<p>設定ファイルを以下のようにする。</p>

<pre><code># -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "precise"
  config.vm.box_url = "/Users/sgyk/local/vagrant/box/precise-server-cloudimg-amd64-vagrant-disk1.box"
  config.cache.auto_detect = true

  config.vm.define :master1 do |master1|
    master1.vm.hostname = "master1"
    master1.vm.network :private_network, ip: "192.168.56.100"
    master1.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--memory", 2048]
      v.name = "mesos_master1"
    end
    master1.vm.synced_folder "data1", "/vagrant_data"
    master1.vm.provision :shell, :path =&gt; "./setup.sh"
  end

  config.vm.define :slave1 do |slave1|
    slave1.vm.hostname = "slave1"
    slave1.vm.network :private_network, ip: "192.168.56.101"
    slave1.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--memory", 2048]
      v.name = "mesos_slave1"
    end
    slave1.vm.synced_folder "data2", "/vagrant_data"
    slave1.vm.provision :shell, :path =&gt; "./setup.sh"
  end

  config.vm.define :slave2 do |slave2|
    slave2.vm.hostname = "slave2"
    slave2.vm.network :private_network, ip: "192.168.56.102"
    slave2.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--memory", 2048]
      v.name = "mesos_slave2"
    end
    slave2.vm.synced_folder "data3", "/vagrant_data"
    slave2.vm.provision :shell, :path =&gt; "./setup.sh"
  end
end
</code></pre>

<p>setup.shの内容は<a href="https://gist.github.com/sgykfjsm/8325561#file-setup-sh">これ</a>。大したことは全くしていなくて、Vagrant用のsshノーパス設定とmesosの依存モジュール（ただしコンパイル時の。いらないかも？）のインストール、mesos本体のインストールを行なう。</p>

<p>だいたいこれでmesosを構築する準備が整う。</p>

<a name="hosts.................."></a>
<h2>hostsを設定する。</h2>

<p>mesosを構築する前に先にhostsを設定しておいたほうが何かとハマらずにすむので、やっておくこと。これが意外と大事。</p>

<pre><code>vagrant@master1:~/scripts$ cat /etc/hosts
# 127.0.0.1     master1 master1 localhost

# The following lines are desirable for IPv6 capable hosts
::1 ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
ff02::3 ip6-allhosts
192.168.56.100 master1
192.168.56.101 slave1
192.168.56.102 slave2
127.0.0.1 localhost
</code></pre>

<p>要は以下のように他ノードの名前解決ができればいいのだけど、ポイントは以下の2つ。</p>

<ul>
<li><code>127.0.0.1 hostname</code>のエントリをコメント文にするなどして無効にすること。</li>
<li><code>127.0.0.1 localhost</code>のエントリは一番下に置いておくこと。</li>
</ul>


<p>それぞれはmesosとは直接関係ないけど、まず1つ目は後でmesos上でSpark Shellを動かす際に、Spark Shellはホスト名にプライベートIPのエントリがあってもなぜかループバックアドレスの方を優先してしまい、その情報を他ノードに渡してしまうため、他ノードからマスターノードへタスクを返すことができなくなってしまう。よって、ホスト名に対応するエントリを1つに限定することでこのような事態を防ぐ必要がある。これってなんか変な気がするけど、わざわざのログで<code>Your hostname, master1 resolves to a loopback address: 127.0.1.1; using 192.168.56.100 instead (on interface eth1)</code>とかって出しているぐらいなのでバグじゃなくて仕様なのだと思う。</p>

<p>2つ目は、Hadoopの利用を見越しての設定。namenodeがローカルで名前解決するときに、/etc/hostsのエントリを上から舐めるんだけど、最初に合致したエントリをnamenodeが採用するため、今回の場合だと127.0.0.1でバインドしてしまう。そうすると、以下の様なエラーが出る。</p>

<pre><code>2013-12-23 14:41:13, 046 INFO org.apache.hadoop.ipc.Client: Retrying connect to server: vagrant-mesos-master1/192.168.56.100:55000. Already tried 9 time(s); retry policy is RetryUpToMaximumCountWithFixedSleep(maxRetries=10,  sleepTime=1 SECONDS)
2013-12-23 14:41:13, 048 WARN org.apache.hadoop.hdfs.server.datanode.DataNode: Problem connecting to server: master1/192.168.56.100:55000
</code></pre>

<p>これを防ぐには、上記のように削除orコメントアウトするか、あるいは一番下の行に持っていくとよい。なお、これはすべてのマシンでやっといたほうがいいらしい。詳細は<a href="http://suzhiyang.appspot.com/?p=188002">ここ</a>を参照のこと。</p>

<p>このhostsファイルの設定は全ノードでやっておくこと。スクリプトでばらまいても良いと思う。</p>

<a name="mesos.................."></a>
<h2>mesosを設定する。</h2>

<p>で、やっと本筋に到達。</p>

<p>Hadoopにしてもそうだけど、分散処理というかクラスタリングというか、その辺のことを行なうための製品は設定が結構ハマりやすい（ような気がする）。なので、ここからがmesosの構築の本番だったりする。</p>

<p>まず、DEBパッケージでインストールすると、<code>/etc/init</code>にファイルが配置されており、自動起動サービスに登録されていることがわかる。</p>

<pre><code>vagrant@master1:~$ ls -l /etc/init/mesos-*
-rw-r--r-- 1 root root 368 Dec 19 23:12 /etc/init/mesos-master.conf
-rw-r--r-- 1 root root 366 Dec 19 23:12 /etc/init/mesos-slave.conf
</code></pre>

<p>そして、ソースからインストールした場合、mesosの起動オプションは<code>mesos-master-env.sh</code>だったりコマンドライン引数で渡したりするが、serviceから起動する場合は、オプションによって設定箇所が異なる。</p>

<pre><code># masterとslaveの両方
vagrant@master1:~$ cat /etc/default/mesos
LOGS=/var/log/mesos
ULIMIT="-n 8192"
# masterのみ
vagrant@master1:~$ cat /etc/default/mesos-master
PORT=5050
ZK=`cat /etc/mesos/zk`
# slaveのみ
vagrant@master1:~$ cat /etc/default/mesos-slave
MASTER=`cat /etc/mesos/zk`
</code></pre>

<p>とりあえずmasterを起動してみようとすると、以下のエラーが出て起動できない。</p>

<pre><code>vagrant@master1:/usr/local/var/mesos/deploy$ mesos-master -h
mesos-master: error while loading shared libraries: libjvm.so: cannot open shared object file: No such file or directory
</code></pre>

<p>なので、共有ライブラリにlibjvm.soを登録する。</p>

<pre><code>vagrant@master1:/usr/local/var/mesos/deploy$ sudo vi /etc/ld.so.conf.d/libjvm_so.conf
vagrant@master1:/usr/local/var/mesos/deploy$ cat /etc/ld.so.conf.d/libjvm_so.conf
/usr/lib/jvm/java-1.7.0-openjdk-amd64/jre/lib/amd64/server
vagrant@master1:/usr/local/var/mesos/deploy$ sudo /sbin/ldconfig
vagrant@master1:/usr/local/var/mesos/deploy$ sudo ldconfig -p | grep jvm
        libjvm.so (libc6,x86-64) =&gt; /usr/lib/jvm/java-1.7.0-openjdk-amd64/jre/lib/amd64/server/libjvm.so
        libjsig.so (libc6,x86-64) =&gt; /usr/lib/jvm/java-1.7.0-openjdk-amd64/jre/lib/amd64/server/libjsig.so
</code></pre>

<p>これで<code>mesos-master</code>と<code>mesos-slave</code>が動くようになる。</p>

<p>masterやslaveに設定する内容は<code>-h</code>か、<a href="http://ampcamp.berkeley.edu/3/exercises/mesos.html#solution_0">ここ</a>とか<a href="http://ampcamp.berkeley.edu/3/exercises/mesos.html#solution_1">ここ</a>を参考にすると良い。</p>

<p>とりあえず、今回は以下のように設定した。なお、ホワイトリストも用意しておくこと。このファイルが無いと、延々と「whitelistが無いよ」というログを吐き続けてしまうし、mesosのマスターは誰彼構わずslaveに組み込んでしまうため、セキュリティ的に用意しておいたほうが良い。</p>

<pre><code>mater1:/etc/default$ cat /etc/default/mesos
LOGS=/var/log/mesos
ULIMIT="-n 8192"
vagrant@master1:/etc/default$ cat /etc/default/mesos-master
PORT=5050
ZK=zk://master1:2181,slave1:2181,slave2:2181/mesos
export MESOS_whitelist=file:///usr/local/var/mesos/deploy/slave.lst
vagrant@master1:/etc/default$ cat /etc/default/mesos-slave
MASTER=zk://master1:2181,slave1:2181,slave2:2181/mesos
export MESOS_work_dir=/tmp/`hostname`/mesos
vagrant@master1:~/scripts$ cat /usr/local/var/mesos/deploy/slave.lst
master1
slave1
slave2
</code></pre>

<p>これらの設定ファイルは起動スクリプト内で読み込まれるためコマンドを記述することができる。地味に便利である。<br>が、良く見てもらうとわかるように<code>zk://</code>や<code>file://</code>という記述があったりするので、地味に注意が必要である。</p>

<p>なお、以下については起動スクリプト内の変数として設定されているため、それらの初期値となるように記述する必要がある</p>

<ul>
<li>zk(masterのみ)</li>
<li>master(slaveのみ)</li>
<li>ip</li>
<li>log_dir</li>
<li>isolation</li>
</ul>


<p>設定ファイル以外の場所で設定値を記述したい場合は以下の様にする。詳細は起動スクリプト<code>/usr/bin/mesos-init-wrapper</code>参照のこと。
    # echo setting parameter > /etc/mesos-[master|slave]/(attribute)
    echo &lsquo;192.168.56.100&rsquo; > /etc/mesos-slave/ip</p>

<p>これでmesosの設定は完了したが、まだmesosを起動させてはいけない。設定ファイルにzkプロトコルを記述していることからわかると思うけど、Zookeeperをインストールする必要がある。</p>

<a name="Zookeeper....................."></a>
<h2>Zookeeperのインストール</h2>

<p>Zookeeperのinstallは<a href="http://www.cloudera.com/content/cloudera-content/cloudera-docs/CDH4/latest/CDH4-Installation-Guide/cdh4ig_topic_4_4.html">Clouderaのマニュアル</a>にしたがってリポジトリを追加して、<a href="http://www.cloudera.com/content/cloudera-content/cloudera-docs/CDH4/latest/CDH4-Installation-Guide/cdh4ig_topic_21_3.html">apt-getでインストール</a>すればOK</p>

<pre><code>vagrant@master1:/tmp$ wget http://archive.cloudera.com/cdh4/one-click-install/precise/amd64/cdh4-repository_1.0_all.deb
vagrant@master1:/tmp$ sudo dpkg -i cdh4-repository_1.0_all.Debian
vagrant@master1:/tmp$ curl -s http://archive.cloudera.com/cdh4/ubuntu/precise/amd64/cdh/archive.key | sudo apt-key add -
OK
vagrant@master1:/tmp$ sudo apt-get update
vagrant@master1:/tmp$ sudo apt-get -y install zookeeper-server zookeeper
</code></pre>

<p>設定ファイルを以下のように更新する。</p>

<pre><code>vagrant@master1:/tmp$ cat /etc/zookeeper/conf/zoo.cfg | grep -v -e "^#\|^$"
maxClientCnxns=50
tickTime=2000
initLimit=10
syncLimit=5
dataDir=/var/lib/zookeeper
clientPort=2181
server.1=master1:2888:3888
server.2=slave1:2888:3888
server.3=slave2:2888:3888
</code></pre>

<p>zookeeper-serverが起動していたら、一旦停止させて起動する。</p>

<pre><code>vagrant@master1:/tmp$ sudo service zookeeper-server status
zookeeper-server is running
vagrant@master1:/tmp$ sudo service zookeeper-server stop
JMX enabled by default
Using config: /etc/zookeeper/conf/zoo.cfg
Stopping zookeeper ... STOPPED
vagrant@master1:/tmp$ sudo -u zookeeper /usr/lib/zookeeper/bin/zkServer-initialize.sh --force --myid 1

Force enabled, data/txnlog directories will be re-initialized
Using myid of 1
vagrant@master1:/tmp$ sudo service zookeeper-server start
JMX enabled by default
Using config: /etc/zookeeper/conf/zoo.cfg
Starting zookeeper ... STARTED
</code></pre>

<p>これらの作業をslaveでも実施しておく。<a href="https://gist.github.com/sgykfjsm/8326115#file-distribute_mesos_setting_and_install_zookeeper-sh">こんなスクリプト</a>を用意しておくと便利かもしれない。</p>

<a name="mesos.................."></a>
<h2>mesosを起動する。</h2>

<p>ここまでやって、ようやくmesosを起動することができる。全ノードでmesosのマスターとスレーブを起動する。これもスクリプトを使って全ノードを対象にマスターとスレーブの起動・停止ができるようにしておくとよさ気。</p>

<pre><code>vagrant@master1:~$ sudo service mesos-master start
vagrant@master1:~$ sudo service mesos-slave start
</code></pre>

<p>適当にどっかのマシン(例えば<a href="http://192.168.56.101:5050/#/">http://192.168.56.101:5050/#/</a> とか)のmesosのWebUIにアクセスして回ると、<code>This master is not the leader, redirecting in 1 seconds &hellip; go now</code>という警告が出て、自動的にZookeeperが選出したmesosのマスターにリダイレクトされる。</p>

<hr />

<p>とりあえず、mesosの構築はここまで。まぁ結構色々設定に気を使うところが多いけど、慣れてしまえば大丈夫なような気がする。続きはHadoop on mesosとSpark on mesosについて書くので、そこで。色々と触ってmesosの感覚を掴んだら、こまかいアーキテクチャなり関連する論文なりを読んで理解を深めていこうと思う。</p>

<p>以下、気になること。</p>

<ul>
<li>新しくノードをmesosに追加した場合にwhitelistを更新しないといけないけど、そうするとmesos-masterを再起動しないといけなくなる。serviceコマンドのオプションにはgraceful restartみたいなのは無いと思うので、そうなると順番にマスターを再起動するようなローリング・リスタートみたいなことをしないといけない？

<ul>
<li>ノード数が多いとスゲーめんどくさそう。</li>
</ul>
</li>
<li>mesosをHadoopとかSpark抜きで素で使うには？

<ul>
<li><a href="http://mesos.apache.org/documentation/latest/app-framework-development-guide/">Framework</a>なるものを自分で作る必要があるけど、<a href="https://github.com/apache/mesos/tree/master/src/examples">Examples</a>を見る限り、JavaとかPyhtonのバインディングはあるけどC++で書くのが楽っぽい？ように見えるけど、C++やったこと無いので個人的にはハードルが高い…。</li>
</ul>
</li>
<li>じゃあ結局のところ、なんでmesos使うの？

<ul>
<li>カジュアルに大規模な分散（あるいは並行？）処理を実現するにはマシンを並べて処理をぶん回すっていうのが多分今のところの最適解だと思っていて、それを実現しているのがHadoopなのだと思う。ただ、Hadoopが本領を発揮できるのは多分数十から数百GB以上のデータを1時間単位でバッチ処理するような要件だと適切だろうけど、そうじゃないと運用コストのほうがメリットより大きかったり、何よりHive使わずにMapReduce書くのは結構しんどいし、Hiveでは記述できる処理には限界があるので、どうしても大規模だったり計算量の多い処理では行き詰まってしまいがち。mesosはそういった状況に対する一つの解になりうるんじゃないかと思っている。けど、この考えが正しいのか気になるし、他の視点も当然あるだろうから、もっと勉強しないといけない。</li>
</ul>
</li>
</ul>


<p>というわけで、mesosをちょっと頑張って追究してみようと思った次第。</p>
]]></content>
  </entry>
  
</feed>
